% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linreg.R
\name{linreg}
\alias{linreg}
\title{Fit a Linear Regression Model Using QR Decomposition}
\usage{
linreg(formula, data)
}
\arguments{
\item{formula}{An object of class \code{\link[stats]{formula}} describing
the model to be fitted.}

\item{data}{A \code{data.frame} containing the variables in the model.}
}
\value{
An object of class \code{"linreg"} with the following components:
\item{coefficients}{Estimated regression coefficients (numeric vector).}
\item{coef.names}{Names of the coefficients (character vector).}
\item{fitted}{Fitted values (\eqn{\hat{y}}).}
\item{residuals}{Residuals (\eqn{y - \hat{y}}).}
\item{df}{Residual degrees of freedom (\eqn{n - p}).}
\item{sigma2}{Residual variance estimate.}
\item{vcov}{Variance–covariance matrix of the coefficients.}
\item{stats}{A \code{data.frame} with estimates, standard errors,
  t-values, and p-values for each coefficient.}
\item{call}{The matched function call.}
\item{formula}{The model formula.}
\item{terms}{The terms object used.}
\item{xlevels}{Levels of the factors in the model.}
\item{qr}{The QR decomposition of the design matrix.}
}
\description{
\code{linreg()} is a custom implementation of multiple linear regression,
similar to \code{\link[stats]{lm}}, but built from first principles using
QR decomposition for coefficient estimation. It returns an object of class
\code{"linreg"} with methods for printing, summarizing, plotting, and
predicting.
}
\details{
This function performs least squares regression using the QR decomposition
of the design matrix \eqn{X}. Standard errors, t-values, and p-values are
computed explicitly from the variance–covariance matrix of the coefficients.

The returned object is of class \code{"linreg"}, for which S3 methods
(\code{print}, \code{summary}, \code{plot}, \code{predict}, \code{coef},
\code{resid}) can be implemented. These mimic the behavior of corresponding
methods for objects of class \code{"lm"}.
}
\examples{
# Fit a regression model
fit <- linreg(Sepal.Length ~ Sepal.Width + Petal.Length, data = iris)

# Inspect results
print(fit)
summary(fit)
coef(fit)
resid(fit)
plot(fit)

# Predict on new data
new_data <- iris[1:5, ]
predict(fit, newdata = new_data)

}
\seealso{
\code{\link[stats]{lm}} for the base R implementation of linear regression.
}
